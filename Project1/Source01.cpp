//#include <iostream>
////#include는 컴파일러에게 헤더파일(라이브러리 파일 / 인클루드 파일)을 해당코드에 추가하라는 전처리기입니다.
//
////컴파일러(Compiler) : 프로그래밍 언어를 기계어로 번역하는 장치(코드 작업할 프로그램)
//
////헤더(Header)파일 / 라이브러리(Library) 파일 / 인클루드 파일
////프로그램에서 특정 작업을 하기 위해 기능들을 따로 모아놓을 파일
////직접 개발하는 경우도 있고, windows kit로 따로 제공해주는 파일들을 가져와 사용하는 경우도 있음(이게 일반적)
////전처리기(preprocessor) : 프로그램이 작업을 하기 이전에 먼저 처리하는 고구입니다.
////기능에 대한 사전 준비, 특정 작업대 대한 제한, 프로그램에서 사용할 값에 대한 정의(매크로)
////#include : 전처리기 중에서도 코드 추가 기응
////#define : 전처리기 중 특정 값에 대한 정의(매크로)
////#pragma : 전처리기 중 특정 작업 대한 처리 / 제한
//// input output strem
////input : 입력
////output : 출력
////strem(스트림) : 연속적인 데이터의 흐름 또는 데이터를 전송하는 
////소프트웨어 모듈(module : 프로그램을 구성하는 구성 요소)을 의미
////C++에서 사용하는 입출력 보조 도구(C언어의 <stdio.h>를 대신해 사용합니다.)
//
//
//
//#define PASS 1
//
//
////함수 : 하나의 명령을 수행하기 위해 명령문들을 모아놓은 명령문 집합체
//
////프로그램이 실행되는 영역 main 함수
////해당 코드가 존재해야 프로그램을 실행할 수 있습니다.
////전체 프로젝트에서 main 함수는 1개만 존재할 수 있습니다.
//
//
//int main()
//
//{
//#if PASS  //PASS가 값으로써 사용되고, 정의되어 있을 때(0이 아닌 값일 때)
//	std::cout << "PASS는 프로그램 안에 정의되어 있습니다." << std::endl;
//	
//#else //PASS가 값으로써 사용되고 있지 않을 경우
//	std::cout << "PASS는 0으로 컴파일되지 않습니다." << std::endl;
//	//c언어의 형태로 위의 코드를 바궛을 경우
//	printf("PASS는 0으로 컴파일되지 않습니다.\n");
//
//#endif
//
////std::cout은 std라는 저장 공간에 있는 cout이라고 해석합니다,
//
////std :: cout은 iostrem에서 제공해주는 출력 개체 (object)입니다.
//	// <<를 통해 cout 개체에 출력하고 싶은 내용들을 전달 합니다.
//	// cout은 전달 받은 순서대로 내용을 출력합니다.
//}
//
//


